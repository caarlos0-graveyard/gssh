#!/bin/bash
set -euo pipefail

test $# -ge 1 && { test "$1" == "--help" || test "$1" == "-h"; } && {
  echo "
gssh: quickly ssh into gcloud instances.

Usage:

  Basic usage:
    $ gssh

  Pre-filter project:
    $ gssh my-proj

  Pre-filter both project and instance:
    $ gssh my-proj instance-xyz

  Flush caches:
    $ gssh --flush

" >&2
  exit 0
}

CACHE="$HOME/Library/Caches/gssh"
test "$(uname)" = "Linux" && CACHE="$HOME/.cache/gssh"
mkdir -p "$CACHE"

test $# -ge 1 && test "$1" == "--flush" && {
  echo "flushing caches..." >&2
  rm -rf "$CACHE"
  exit 0
}

pcache="$CACHE/projects.json"
test "$(date +'%j')" != "$(stat -f '%Sm' -t '%j' "$pcache" 2>/dev/null)" && {
  echo "updating projects cache..." >&2
  gcloud projects list --format json >"$pcache"
}

export qproj=""
export qinst=""

test $# -ge 1 && qproj="$1"
test $# -eq 2 && qinst="$2"

project="$(jq -r '.[].projectId' "$pcache" | fzf -q "$qproj" -1)"

icache="$CACHE/instances-$project.json"
# shellcheck disable=SC2046
if [[ $(date -v-5M +'%j%H%M') > $(stat -f '%Sm' -t '%j%H%M' "$icache" 2>/dev/null) ]]; then
  echo "updating $project instance cache..." >&2
  gcloud compute instances list --project "$project" --format json >"$icache"
fi

name="$(jq -r '.[].name' "$icache" | fzf -q "$qinst" -1)"

ip="$(jq -r ".[] | select(.name == \"$name\") | .networkInterfaces[] | .networkIP" "$icache" | fzf -1)"

echo "ssh-ing into $ip..." >&2
ssh root@"$ip"
